OK -> zoidfs_null should return status/information


OK -> I assume create can succeed without creating the file?
 (i.e. existed already)

OK -> WOuld be easy if there is an 'invalid' zoidfs handle
OK -> is there a ZOIDFS root handle?


TBDL statfs ??

OK -> hardlink support?


OK -> zoidfs_attr_type_t ???


OK -> zoidfs time_t: posix has nanosecond now

don't care -> statfs missing


don't care -> sync missing

OK -> zoidfs_setattr: out attr_t?

OK (ignored) -> There is more to ESTALE than meets the eye: 
    if it handle->name files while resolving the path 
    in a (parent_handle, component) 
    the caller needs to do a lookup on the parent_handle 
--> NOTE: affects calls with two input handles (symlink, link, rename)
    on ESTALE, both handles need a lookup

OK -> Define error values: is it ZFSERR_STALE or -ZFSERR_STALE 
that is returned by a ZOIDFS implementation
       -> return normal value 

OK -> mode bits?

OK -> does readdir return . and .. ?

OK -> dirent cookie too small!

DONE -> what to do with symlinks and lookup?
  (->return handle of destination or return handle of symlink file?

IGNORE -> uint64_t instead of off_t ? 
   Only need to be defined on the wire?

   Also: size_t for memsize but uint64_t for fileregion size? (in read call)
  (currently option 1 since getattr returns symlink attr))

/* for permissions */
-> add zoidfs call to obtain uid/gid of connection


